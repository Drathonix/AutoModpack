plugins {
    id 'java'
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

jar.enabled = false

allprojects {
    apply plugin: "java"
    apply plugin: "com.github.johnrengelman.shadow"

    archivesBaseName = rootProject.archives_base_name + "-" + project.name
    version = rootProject.mod_version
    group = rootProject.maven_group

    repositories {
        mavenCentral()
        maven { url 'https://api.modrinth.com/maven' }

        maven { url "https://maven.fabricmc.net/" }
        maven { url "https://maven.quiltmc.org/repository/release" }
        maven { url "https://files.minecraftforge.net/maven/" }
        maven { url "https://libraries.minecraft.net/" }
    }

    dependencies {
        implementation project(path: ':common')
        implementation project(path: ':core-common')

        // our needed dependencies
        implementation('maven.modrinth:preloading-tricks:0.0.14')
        implementation "com.google.code.gson:gson:2.10.1"
        implementation "org.apache.logging.log4j:log4j-core:2.20.0"

        // loaders apis
        implementation("net.fabricmc:fabric-loader:0.14.22") {
            transitive = false
        }
        implementation("org.quiltmc:quilt-loader:0.20.1") {
            transitive = false
        }
        implementation("net.minecraftforge:fmlcore:1.20.1-47.1.3")
        implementation("net.minecraftforge:fmlloader:1.20.1-47.1.3")
    }

    shadowJar {
        // set normal name
        archiveClassifier.set('')
        from sourceSets.main.output

        // Only include the output classes from modules
        from project(':core-common').sourceSets.main.output
        from project(':common').sourceSets.main.output
        // Exclude other dependencies that might have been bundled
        configurations = []

        if (project.name.contains('forge')) {
            manifest {
                attributes(
                        "FMLModType": "LIBRARY" // needed to load early
                )
            }
        }
    }

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    java {
        withSourcesJar()
    }

    assemble.dependsOn shadowJar
}
